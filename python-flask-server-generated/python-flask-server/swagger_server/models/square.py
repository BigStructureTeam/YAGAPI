# coding: utf-8

from __future__ import absolute_import
from .base_model_ import Model
from datetime import date, datetime
from typing import List, Dict
from ..util import deserialize_model


class Square(Model):
    """
    NOTE: This class is auto generated by the swagger code generator program.
    Do not edit the class manually.
    """
    def __init__(self, type: str=None, lat_max: float=None, lon_min: float=None, count: int=None, start: str=None, end: str=None):
        """
        Square - a model defined in Swagger

        :param type: The type of this Square.
        :type type: str
        :param lat_max: The lat_max of this Square.
        :type lat_max: float
        :param lon_min: The lon_min of this Square.
        :type lon_min: float
        :param count: The count of this Square.
        :type count: int
        :param start: The start of this Square.
        :type start: str
        :param end: The end of this Square.
        :type end: str
        """
        self.swagger_types = {
            'type': str,
            'lat_max': float,
            'lon_min': float,
            'count': int,
            'start': str,
            'end': str
        }

        self.attribute_map = {
            'type': 'type',
            'lat_max': 'lat_max',
            'lon_min': 'lon_min',
            'count': 'count',
            'start': 'start',
            'end': 'end'
        }

        self._type = type
        self._lat_max = lat_max
        self._lon_min = lon_min
        self._count = count
        self._start = start
        self._end = end

    @classmethod
    def from_dict(cls, dikt) -> 'Square':
        """
        Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Square of this Square.
        :rtype: Square
        """
        return deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """
        Gets the type of this Square.
        Can be 'big' or 'small'.

        :return: The type of this Square.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """
        Sets the type of this Square.
        Can be 'big' or 'small'.

        :param type: The type of this Square.
        :type type: str
        """

        self._type = type

    @property
    def lat_max(self) -> float:
        """
        Gets the lat_max of this Square.
        Latitude of the NO corner of the square.

        :return: The lat_max of this Square.
        :rtype: float
        """
        return self._lat_max

    @lat_max.setter
    def lat_max(self, lat_max: float):
        """
        Sets the lat_max of this Square.
        Latitude of the NO corner of the square.

        :param lat_max: The lat_max of this Square.
        :type lat_max: float
        """

        self._lat_max = lat_max

    @property
    def lon_min(self) -> float:
        """
        Gets the lon_min of this Square.
        Longitude of the NO corner of the square.

        :return: The lon_min of this Square.
        :rtype: float
        """
        return self._lon_min

    @lon_min.setter
    def lon_min(self, lon_min: float):
        """
        Sets the lon_min of this Square.
        Longitude of the NO corner of the square.

        :param lon_min: The lon_min of this Square.
        :type lon_min: float
        """

        self._lon_min = lon_min

    @property
    def count(self) -> int:
        """
        Gets the count of this Square.
        Total number of phone localized in the square.

        :return: The count of this Square.
        :rtype: int
        """
        return self._count

    @count.setter
    def count(self, count: int):
        """
        Sets the count of this Square.
        Total number of phone localized in the square.

        :param count: The count of this Square.
        :type count: int
        """

        self._count = count

    @property
    def start(self) -> str:
        """
        Gets the start of this Square.
        Date time in this format '2002-12-25 00:00:00' to which the count was made or the average begins.

        :return: The start of this Square.
        :rtype: str
        """
        return self._start

    @start.setter
    def start(self, start: str):
        """
        Sets the start of this Square.
        Date time in this format '2002-12-25 00:00:00' to which the count was made or the average begins.

        :param start: The start of this Square.
        :type start: str
        """

        self._start = start

    @property
    def end(self) -> str:
        """
        Gets the end of this Square.
        Date time in this format '2002-12-25 00:00:00' to which the count was made or the average ends.

        :return: The end of this Square.
        :rtype: str
        """
        return self._end

    @end.setter
    def end(self, end: str):
        """
        Sets the end of this Square.
        Date time in this format '2002-12-25 00:00:00' to which the count was made or the average ends.

        :param end: The end of this Square.
        :type end: str
        """

        self._end = end

